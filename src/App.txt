import { useState } from 'react';

const App = () => {
  const [fields, setFields] = useState([{ input: '', select: '' }]);
  const [errors, setErrors] = useState([]);
  const [submittedValues, setSubmittedValues] = useState(null); // To store submitted data

  const handleInputChange = (index, event) => {
    const updatedFields = [...fields];
    updatedFields[index][event.target.name] = event.target.value;
    setFields(updatedFields);
  };

  const handleAddField = () => {
    setFields([...fields, { input: '', select: '' }]);
    setErrors([...errors, { input: '', select: '' }]);
  };

  const handleDeleteField = (index) => {
    const updatedFields = fields.filter((_, i) => i !== index);
    const updatedErrors = errors.filter((_, i) => i !== index);
    setFields(updatedFields);
    setErrors(updatedErrors);
  };

  const handleSubmit = (event) => {
    event.preventDefault();

    // Validate fields and set errors
    const newErrors = fields.map((field) => ({
      input: field.input ? '' : 'Input is required',
      select: field.select ? '' : 'Selection is required',
    }));

    setErrors(newErrors);

    // Check if there are any errors
    const hasErrors = newErrors.some((error) => error.input || error.select);
    if (!hasErrors) {
      setSubmittedValues(fields); // Save the submitted values
      alert('Form submitted successfully!');
    }
  };

  return (
    <div className="container mx-auto p-4">
      <form onSubmit={handleSubmit} className="space-y-4">
        {fields.map((field, index) => (
          <div key={index} className="flex items-center space-x-4">
            <div className="flex flex-col">
              <input
                type="text"
                name="input"
                value={field.input}
                onChange={(event) => handleInputChange(index, event)}
                placeholder="Enter text"
                className="border p-2 rounded"
              />
              {errors[index]?.input && (
                <span className="text-red-500 text-sm">{errors[index].input}</span>
              )}
            </div>
            <div className="flex flex-col">
              <select
                name="select"
                value={field.select}
                onChange={(event) => handleInputChange(index, event)}
                className="border p-2 rounded"
              >
                <option value="">Select an option</option>
                <option value="Option 1">Option 1</option>
                <option value="Option 2">Option 2</option>
                <option value="Option 3">Option 3</option>
              </select>
              {errors[index]?.select && (
                <span className="text-red-500 text-sm">{errors[index].select}</span>
              )}
            </div>
            <button
              type="button"
              onClick={() => handleDeleteField(index)}
              className="bg-red-500 text-white px-2 py-1 rounded"
            >
              Delete
            </button>
          </div>
        ))}
        <button
          type="button"
          onClick={handleAddField}
          className="bg-blue-500 text-white px-4 py-2 rounded"
        >
          + Add Field
        </button>
        <button
          type="submit"
          className="bg-green-500 text-white px-4 py-2 rounded"
        >
          Submit
        </button>
      </form>

      {submittedValues && (
        <div className="mt-6">
          <h3 className="text-lg font-bold">Submitted Values:</h3>
          <table className="table-auto border-collapse border border-gray-500 w-full mt-4">
            <thead>
              <tr>
                <th className="border border-gray-500 px-4 py-2">Input</th>
                <th className="border border-gray-500 px-4 py-2">Select</th>
              </tr>
            </thead>
            <tbody>
              {submittedValues.map((field, index) => (
                <tr key={index}>
                  <td className="border border-gray-500 px-4 py-2">{field.input}</td>
                  <td className="border border-gray-500 px-4 py-2">{field.select}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
    </div>
  );
};

export default App;






<div className='bg-cyan-950 min-h-screen flex flex-col items-center justify-center'> 
      <form onSubmit={handleSubmit}>
        {formFields.map((field, index) => (
          <div key={index} >
            <input type="text" name="input" value={field.input} onChange={(e) => handleInputChange(index, e)} placeholder="Input"/>
            {errors[index]?.input && <span>{errors[index].input}</span>}
            <select name="select" value={field.select} onChange={(e) => handleInputChange(index, e)}>
              <option value="">Select</option>
              <option value="option1">Option 1</option>
              <option value="option2">Option 2</option>
              <option value="option3">Option 3</option>
            </select>
            {errors[index]?.select && <span >{errors[index].select}</span>}
            <button type="button" onClick={() => removeField(index)}>Delete</button>
          </div>
        ))}
        <button type="button" onClick={addField}>Add</button>
        <button type="submit">Submit</button>
      </form>

      <h3>Form State:</h3>
      <table>
        <thead>
          <tr>
            <th>Input</th>
            <th>Select</th>
          </tr>
        </thead>
        <tbody>
          {submittedData.map((data, index) => (
            <tr key={index}>
              <td>{data.input}</td>
              <td>{data.select}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>